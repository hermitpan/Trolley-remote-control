C51 COMPILER V9.59.0.0   MAIN                                                              10/12/2021 23:49:29 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\MDK5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2            极客领航教程 -嵌入式项目篇
   3            项目名称：智能小车远程控制系统
   4            
   5            硬件设计：
   6            主控芯片：51单片机
   7            电机驱动：L298N
   8            WIFI模块：ESP8266
   9            电机：两个直流电机
  10            
  11            软件设计：
  12            1、51单片机引脚基本使用
  13            2、串口使用，初始化，中断函数，用于ESP8266数据传输
  14            3、定时器使用，初始化，中断函数
  15            4、PWM设置，利用定时器，设置占空比
  16          */
  17          #include <REGX52.H>
  18          #include<intrins.h> 
  19          #define u8 unsigned char  
  20          #define u16 unsigned int
  21            
  22          //使用定时器来输出PWM信号，通过调节占空比实现调试
  23          extern void Motor_Left(bit ReverOrCoro, u8 DutyCycle); 
  24          extern void Motor_Right(bit ReverOrCoro, u8 DutyCycle); 
  25          
  26          //使能端，利用PWM波实现调速
  27          sbit ENA = P1^4;
  28          sbit ENB = P1^5;
  29          
  30          u8 number; //占空比变量
  31          u8 receiveTable[10]; //接收ESP8266传来的数据
  32          u8 i = 0; //控制变量
  33          
  34          void UartInit(void);//串口初始化函数
  35          void Delay_ms(u16 n);//延时子函数
  36          void Sent_ZF(u8 receiveTable);//发送一个字节
  37          void AT_Send_String(u8 *string);//发送字符串
  38          void ESP8266_Init();//ESP8266初始化
  39          void Timer0Config(); //定时器0配置
  40          void Car_Control(); //小车控制函数，根据wifi指令
  41          
  42          void Car_Control()
  43          {
  44   1        
  45   1          if(receiveTable[9]==0x39) //当送入字符9时，停止
  46   1          {
  47   2              Motor_Left(0, 0), Motor_Right(0, 0);
  48   2          }
  49   1          
  50   1          if(receiveTable[9]==0x31) //当送入字符1时，前进
  51   1          {
  52   2              Motor_Left(1, number), Motor_Right(0, number);
  53   2          }
  54   1        
  55   1          if(receiveTable[9]==0x32) //当送入字符2时，后退
C51 COMPILER V9.59.0.0   MAIN                                                              10/12/2021 23:49:29 PAGE 2   

  56   1          {
  57   2              Motor_Left(0, number), Motor_Right(1, number);
  58   2          }
  59   1        
  60   1          if(receiveTable[9]==0x33) //当送入字符3时，左转
  61   1          {
  62   2              Motor_Left(1, number), Motor_Right(0, 0);   
  63   2          }
  64   1          
  65   1          if(receiveTable[9]==0x34) //当送入字符4时，右转
  66   1          {
  67   2              Motor_Left(1, 0), Motor_Right(0, number);
  68   2          }
  69   1          
  70   1          if(receiveTable[9]==0x35) //当送入字符5时，加速
  71   1          {
  72   2              number+=20;  //加速
  73   2              if(number >= 100)
  74   2              {
  75   3                number = 100;
  76   3              }
  77   2          }
  78   1          
  79   1          if(receiveTable[9]==0x36) //当送入字符6时，减速
  80   1          {
  81   2              number -= 20;  //减速
  82   2              if(number <= 40)
  83   2              {
  84   3                number = 40;
  85   3              }
  86   2          }
  87   1      
  88   1      }
  89          
  90          void main()
  91          {
  92   1        Delay_ms(5000); //先延时5s左右
  93   1        Timer0Config(); //定时器0初始化
  94   1        UartInit(); //串口初始化
  95   1        ESP8266_Init(); //ESP8266模块初始化
  96   1        number = 60; //默认占空比
  97   1        while(1)
  98   1        {
  99   2          if(receiveTable[9]==0x63) //当为字符 c 时，进入遥控模式
 100   2          {
 101   3            AT_Send_String("AT+CIPSEND=0,2\r\n"); //向序号0的客户端发送2字节的数据
 102   3            Delay_ms(500);
 103   3            AT_Send_String("ok\r\n"); //发送的数据内容
 104   3            Delay_ms(500);
 105   3            while(1)
 106   3            {
 107   4              Car_Control(); //调用控制函数
 108   4            }       
 109   3          }
 110   2          
 111   2        } //while对应 }
 112   1      } //main函数对应 }
 113          
 114          //串口初始化函数
 115          void UartInit(void)   //串口初始化函数
 116          {
 117   1        TMOD &= 0x0F; //清除定时器1的配置
C51 COMPILER V9.59.0.0   MAIN                                                              10/12/2021 23:49:29 PAGE 3   

 118   1        TMOD |= 0x20; //定时器工作方式2,8位自动重载(0010 0000)
 119   1        TL1 = 0xfd;  //装入初值
 120   1        TH1 = 0xfd; //装入初值  
 121   1        IP = 0; //中断优先级相同
 122   1        TR1 = 1;  //启动定时器1
 123   1        REN=1;    //允许串行口接收数据
 124   1        SM0=0;    //工作方式1,10位异步收发
 125   1        SM1=1;   
 126   1        EA = 1;   //打开全局中断控制
 127   1        ES=1;     //打开串行口中断
 128   1      }
 129          
 130          //定时器0初始化函数
 131          void Timer0Config()
 132          {
 133   1        TMOD &= 0xF0; //清除定时器0的模式
 134   1        TMOD |= 0x01; //设置定时器0模式
 135   1        TH0 = 0xFF; //送入初值 (65536 - 130) / 256   65536 - 65406
 136   1        TL0 = 0x7E; //(65536 - 130) % 256
 137   1        EA = 1; //打开总中断
 138   1        ET0 = 1; //打开定时器0中断允许
 139   1        TR0 = 1; //定时器0允许控制位
 140   1          /*总结定时器初始化的步骤：
 141   1          1、选择定时器的模式，设置TMOD 上面是TMOD=0X01;
 142   1             选择模式了，就是确定了定时和计数的寄存器是多少位
 143   1          2、给定时器送入初值，确定每次寄存器溢出的时间
 144   1             TH0=0Xd8;  
 145   1             TL0=0Xf0;  
 146   1          3、打开中断允许，就是ET0，EA
 147   1          4、开始计时  TR0=1;
 148   1          */
 149   1      }
 150          
 151          //串口发送数据 单个字节
 152          void Sent_ZF(u8 dat)  //发送一个字节
 153          {
 154   1        ES = 0; //不允许串行口接受、发送中断
 155   1        TI=0; //循环等待发送结束，当发送结束时，TI=1了
 156   1        SBUF = dat; //将dat数据存入SBUF中，为一字节
 157   1        while(!TI); //当发送完成，TI = 1，那么!TI为假，结束循环
 158   1        TI = 0; //TI复位
 159   1        ES = 1; //允许串行口接受、发送中断
 160   1      }
 161          
 162          //串口发送数据，字符串
 163          void AT_Send_String(u8 *string)  //发送字符串
 164          {
 165   1        while(*string) //当到字符尾时，'\0' 会结束循环
 166   1        {
 167   2          Sent_ZF(*string++);//调用发送单个字节函数
 168   2          Delay_ms(5);
 169   2        }
 170   1      }
 171          
 172          //延时函数
 173          void Delay_ms(u16 n)
 174          {
 175   1        unsigned int i,j;
 176   1        for(i=0;i<n;i++)
 177   1        for(j=0;j<123;j++);
 178   1      }
 179          
C51 COMPILER V9.59.0.0   MAIN                                                              10/12/2021 23:49:29 PAGE 4   

 180          
 181          //ESP8266 初始化函数
 182          void ESP8266_Init()   //esp8266 9600波特率
 183          {
 184   1        Delay_ms(1000);
 185   1        AT_Send_String("AT+CWMODE=2\r\n"); // = 2 为AP模式,= 1 为客户端模式
 186   1        Delay_ms(1000);
 187   1        AT_Send_String("AT+CWSAP=esp8266,0123456789,11,4\r\n");//建立WiFi热点
 188   1        Delay_ms(1000);
 189   1        AT_Send_String("AT+RST\r\n"); //重启模块
 190   1        Delay_ms(1000);
 191   1        AT_Send_String("AT+CIPMUX=1\r\n");  //设置为多连接模式，启动模块
 192   1        Delay_ms(1000);
 193   1        AT_Send_String("AT+CIPSERVER=1,8090\r\n"); //服务器的设置端口
 194   1      }
 195          
 196          //串口中断函数 接收数据
 197          void uart() interrupt 4  
 198          { 
 199   1        if(RI == 1) //说明接收到了数据
 200   1        {
 201   2          RI = 0; //清除串口接收标志位，只有清除了，下一次才能接收数据
 202   2          receiveTable[i] = SBUF; //将数据存入数组中
 203   2          if(receiveTable[0] == '+') 
 204   2          //判断是否为无效数据，由于WiFi模块会自动加上“+PID. ”开头的字符串
 205   2          //有效的数据是第十位
 206   2          //假如外部通过ESP8266发送数据 5 到51上
 207   2          //那么51串口接收到"+PID...5"   5是第十位
 208   2          //所以receiveTable[9]才是我们真正的数据
 209   2          {
 210   3            i++;
 211   3          }
 212   2          else
 213   2          {
 214   3            i = 0;
 215   3          }
 216   2          
 217   2          if(i == 10)
 218   2          {
 219   3            i = 0;
 220   3          } 
 221   2        }
 222   1      }
 223          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    471    ----
   CONSTANT SIZE    =    116    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
